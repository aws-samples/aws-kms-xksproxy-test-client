name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  style:
    name: Shellcheck
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # https://github.com/marketplace/actions/shellcheck
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@1.1.0
        with:
          check_together: 'yes'

  integration-tests:
    name: Integration Tests
    needs: style
    runs-on: ubuntu-22.04
    env:
      URI_PREFIX: 'example/uri/path/prefix'
      SIGV4_ACCESS_KEY_ID: ${{ secrets.SIGV4_ACCESS_KEY_ID }}
      SIGV4_SECRET_ACCESS_KEY: ${{ secrets.SIGV4_SECRET_ACCESS_KEY }}
      KEY_ID: 'foo'
    steps:
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      - name: Skip Integration Tests unless this is a pull request or if the secrets are available
        run: exit

      - name: Checkout
        if: github.event_name == 'pull_request' || env.SIGV4_SECRET_ACCESS_KEY != ''
        uses: actions/checkout@v3

      - name: Run all https tests against xks-proxy
        if: github.event_name == 'pull_request' || env.SIGV4_SECRET_ACCESS_KEY != ''
        env:
          XKS_PROXY_HOST: ${{ secrets.XKS_PROXY_HTTPS_TEST_HOST }}
        run: |
          ./test-xks-proxy -a | tee ./response.txt
          result=$(tail -1 ./response.txt)
          if ! [[ "$result" =~ ^.*All && "$result" =~ PASSED.*$ ]]; then
              exit 1
          fi

      - name: Prepare mTLS key
        env:
          MTLS_TEST_KEY: ${{ secrets.MTLS_TEST_KEY }}
        if: github.event_name == 'pull_request' || env.MTLS_TEST_KEY != ''
        run: 'echo "$MTLS_TEST_KEY" > "./key.pem"'
        shell: bash

      - name: Prepare mTLS cert
        env:
          MTLS_TEST_CERT: ${{ secrets.MTLS_TEST_CERT }}
        if: github.event_name == 'pull_request' || env.MTLS_TEST_CERT != ''
        run: 'echo "$MTLS_TEST_CERT" > "./cert.pem"'
        shell: bash

      - name: Prepare mTLS CA bundle
        env:
          MTLS_CA_BUNDLE: ${{ secrets.MTLS_CA_BUNDLE }}
        if: github.event_name == 'pull_request' || env.MTLS_CA_BUNDLE != ''
        run: 'echo "$MTLS_CA_BUNDLE" > "./ca-bundle.pem"'
        shell: bash

      - name: Run all mTLS tests against xks-proxy
        env:
          MTLS_TEST_KEY: ${{ secrets.MTLS_TEST_KEY }}
          XKS_PROXY_HOST: ${{ secrets.XKS_PROXY_MTLS_TEST_HOST }}
          CURL_CA_BUNDLE: ./ca-bundle.pem
          MTLS: "--key ./key.pem --cert ./cert.pem"
        if: github.event_name == 'pull_request' || env.MTLS_TEST_KEY != ''
        run: |
          trap 'rm -f ./*.pem' exit
          ./test-xks-proxy -a | tee ./response.txt
          result=$(tail -1 ./response.txt)
          if ! [[ "$result" =~ ^.*All && "$result" =~ PASSED.*$ ]]; then
              exit 1
          fi
